//Here, we are going to see about String Templates in Kotlin...
//We can define main() function(method) with args or without any args it's much possible in Kotlin...
//A main() function or method with argument...
fun main(args: Array<String>){
    //Here, we can assign if result to both variable & functions(methods) as shown below...
    val name = if(args.isNotEmpty()) "Something!" else "Nothing!"
    println("Hello,$name")
    println()
    //Two variable types in kotlin known as val & var...
    //Val variable it's an Immutable(non-modifiable) type...
    //Once a value is assigned on val variable it can't be re-initialized as shown below...
    //No Setters for val one & only Getters are available...
    val no = 17
    // no = 18 -> Error coz val is immutable variable...
    println(no)
    //Now, we will see about var variable it's a mutable(modifiable) variable in Kotlin...
    //In var variable we can re-initialize values at any no of times it's much possible...
    //Both, Getters & Setters are available for var variable type...
    var size = 10
    size = 12 // -> No Error coz var is mutable variable...
    println(size)
}
//Here, also we are going to see about String Templates in Kotlin...
package home
//In Kotlin, we can define a function(method) as a top-level function like class in java...
//Here, no need for class we can run main() method(function) without a class...
//In Kotlin, we can define main() method(function) with or without arguments it's very much possible...
fun main(){
    val name = "Prabha"
    //Here, we can use dollar symbol to access a variable or field inside a double quotes in Kotlin as shown below...
    println("Hello,${name}!")
    //Here, we access variable inside a double quotes without a curly braces it's also fine as shown below...
    println("Welcome,$name!")
    //String concatenation is also possible in Kotlin like Java...
    //But, String concatenation is converted as String Templates in Kotlin it's shown above...
    println("Fine,"+name)
    println()
    //In Kotlin, we can access functions(methods) inside a double quotes but here curly braces are mandatory for variables is not as shown below...
    println("${get()}")
    println("${put(90,30)}")
}
//In Kotlin, we can return null from a function but its type must be nullable Unit as shown below...
fun get(): Unit? {
    return null
}
//Here, we return an integer value from a function coz the type of the method(function) is Int it's below...
fun put(a:Int,b:Int) : Int{
    return a+b
}
